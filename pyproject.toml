[project]
name = "whisper-transcriber"
version = "0.1.0"
description = "CLI tool to download YouTube audio and transcribe it using OpenAI Whisper"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
dependencies = [
    "yt-dlp>=2025.7.21",
    "faster-whisper>=1.1.1",
    "click>=8.2.1",
    "rich>=14.1.0",
    "torch>=2.7.1",
    "transformers>=4.48.0",
    "accelerate>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.9.0",
    "mypy>=1.14.1",
    "pre-commit>=4.1.0",
    "types-requests>=2.32.0",
]

[project.scripts]
whisper-transcriber = "whisper_transcriber.cli:main"

[tool.ruff]
target-version = "py312"
line-length = 100
fix = false

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C90",    # mccabe complexity
    "N",      # pep8-naming
    "D",      # pydocstyle
    "ANN",    # flake8-annotations
    "S",      # flake8-bandit
    "BLE",    # flake8-blind-except
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "EM",     # flake8-errmsg
    "ISC",    # flake8-implicit-str-concat
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "ARG",    # flake8-unused-arguments
    "RUF",    # ruff-specific rules
]
ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D107",   # Missing docstring in __init__
    "ANN401", # Dynamically typed expressions (Any)
    "S101",   # Use of assert detected
    "B008",   # Do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "ANN", "D"]
"tests/*.py" = ["S101", "ANN", "D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = false
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = "faster_whisper.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yt_dlp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "click.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "torch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rich.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "transformers.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "whisper_transcriber.translator"
disable_error_code = ["union-attr", "operator", "attr-defined"]

[[tool.mypy.overrides]]
module = "accelerate.*"
ignore_missing_imports = true
